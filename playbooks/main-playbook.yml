---
- name: Bootstrap Main node #nome playbook
  hosts: main                  #target del playbook
  become: yes                   #esegue sudo per lanciare i comandi

  tasks:
    #GRAFANA
    - name: Add Grafana apt key #--
      ansible.builtin.apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana to sources.list #--
      ansible.builtin.apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        filename: grafana #inserisce in /etc/apt/sources.list.d/ grafana.list
        state: present

    - name: Update Grafana repo and Install Grafana #--
      ansible.builtin.apt:
        update_cache: true
        name: grafana
        state: present

    - name: Ensure Grafana is started and enabled #--
      ansible.builtin.systemd_service:
        enabled: true
        name: grafana-server
        state: started

    #PROMETHEUS
    - name: Download Prometheus
      ansible.builtin.get_url:
        url: https://github.com/prometheus/prometheus/releases/download/v2.30.3/prometheus-2.30.3.linux-amd64.tar.gz
        dest: /home/ubuntu/

    - name: Extract Prometheus Archive
      ansible.builtin.unarchive:
        src: /home/ubuntu/prometheus-2.30.3.linux-amd64.tar.gz
        dest: /home/ubuntu/
        remote_src: yes

    - name: Remove Prometheus archive
      ansible.builtin.file:
        path: /home/ubuntu/prometheus-2.30.3.linux-amd64.tar.gz
        state: absent

    - name: Create Prometheus group
      ansible.builtin.group:
        name: prometheus
        system: yes
        state: present

    - name: Create Prometheus user
      ansible.builtin.user:
        name: prometheus
        group: prometheus
        shell: /sbin/nologin
        system: true
        state: present
    - 
    - name: Create Prometheus directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0775'
        owner: prometheus
        group: prometheus
      loop:
        - /etc/prometheus/rules
        - /etc/prometheus/rules.d
        - /etc/prometheus/files_sd
        - /var/lib/prometheus

    - name: Copy to /usr/local/bin
      ansible.builtin.copy:
        dest: /usr/local/bin/
        remote_src: true
        src: "{{ item }}"
      loop:
        - /home/ubuntu/prometheus-2.30.3.linux-amd64/prometheus
        - /home/ubuntu/prometheus-2.30.3.linux-amd64/promtool

# cp -r consoles/ console_libraries/ /etc/prometheus/
    - name: Copy to /etc/prometheus
      ansible.builtin.command: cp -r {{ item }} /etc/prometheus/
      loop:
        - /home/ubuntu/prometheus-2.30.3.linux-amd64/consoles
        - /home/ubuntu/prometheus-2.30.3.linux-amd64/console_libraries

# vim /etc/systemd/system/prometheus.service

# [Unit]
# Description=Prometheus systemd service unit
# Wants=network-online.target
# After=network-online.target

# [Service]
# Type=simple
# User=prometheus
# Group=prometheus
# ExecReload=/bin/kill -HUP $MAINPID
# ExecStart=/usr/local/bin/prometheus \
# --config.file=/etc/prometheus/prometheus.yml \
# --storage.tsdb.path=/var/lib/prometheus \
# --web.console.templates=/etc/prometheus/consoles \
# --web.console.libraries=/etc/prometheus/console_libraries \
# --web.listen-address=0.0.0.0:9090

# SyslogIdentifier=prometheus
# Restart=always

# [Install]
# WantedBy=multi-user.target

# vim /etc/prometheus/prometheus.yml

# global:
#   scrape_interval:     15s # By default, scrape targets every 15 seconds.
# scrape_configs:
#   - job_name: 'node'
#     static_configs:
#       - targets: ['localhost:9100']

# chown -R prometheus:prometheus /etc/prometheus /var/lib/prometheus
# chmod -R 775 /etc/prometheus/ /var/lib/prometheus/

# systemctl start prometheus
# systemctl enable prometheus